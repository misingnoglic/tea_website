# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-03-24 17:58
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('zip_code', models.PositiveSmallIntegerField(default=0)),
                ('website', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('name', models.CharField(max_length=60, primary_key=True, serialize=False)),
                ('flavoring', models.BooleanField(default=False)),
                ('base', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='base_ingredient', to='tea.Ingredient')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('story', models.TextField(blank=True, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('icon', models.URLField(blank=True, null=True)),
                ('steeping_time_minutes', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('steeping_temperature_f', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('description_directions', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tea.Brand')),
                ('ingredients', models.ManyToManyField(related_name='teas', to='tea.Ingredient')),
            ],
        ),
        migrations.CreateModel(
            name='TeaType',
            fields=[
                ('name', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('steeping_temperature', models.PositiveSmallIntegerField()),
                ('steeping_time_minutes', models.PositiveSmallIntegerField()),
                ('caffeine_level', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('directions', models.TextField(blank=True)),
            ],
        ),
        migrations.AddField(
            model_name='tea',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tea.TeaType'),
        ),
        migrations.AddField(
            model_name='rating',
            name='tea',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tea.Tea'),
        ),
        migrations.AddField(
            model_name='rating',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='picture',
            name='tea',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tea.Tea'),
        ),
        migrations.AddField(
            model_name='picture',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='favorite',
            name='tea',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tea.Tea'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='tea',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tea.Tea'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='rating',
            unique_together=set([('user', 'tea')]),
        ),
    ]
